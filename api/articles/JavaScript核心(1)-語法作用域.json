{"title":"JavaScript 核心(1)-語法作用域","uid":"6258e762300792bc057a2b358e905b3b","slug":"JavaScript核心(1)-語法作用域","date":"2021-10-01T02:35:08.000Z","updated":"2021-10-08T07:40:34.752Z","comments":true,"path":"api/articles/JavaScript核心(1)-語法作用域.json","keywords":"前端,技術,網頁開發,前端開發,網頁,JavaScript,CSS,HTML,Vue,Vue.js,前端筆記","cover":"https://i.postimg.cc/tC28h7Zc/javascript.png","content":"<h2 id=\"JavaScript是語法作用域-靜態作用域\"><a href=\"#JavaScript是語法作用域-靜態作用域\" class=\"headerlink\" title=\"JavaScript是語法作用域(靜態作用域)\"></a>JavaScript是語法作用域(靜態作用域)</h2><p><img src=\"https://i.postimg.cc/mkM8dFGr/image.jpg\" alt=\"https://i.postimg.cc/mkM8dFGr/image.jpg\"></p>\n<p><strong>語法作用域</strong> :  又稱靜態作用域，在語法解析時，就已經確定作用域，且不會再改變。</p>\n<p><strong>動態作用域</strong> :  變數的作用域再函式調用的時候才會決定。</p>\n<p>看看以下範例 :</p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">var</span> value <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">fn1</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 向外查找會找到 value = 1</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">fn2</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">var</span> value <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 這段變數只會在 fn2() 裡作用</span>\n\t<span class=\"token function\">fn1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">fn2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>因為 JavaScript 是語法作用域(靜態作用域)，<strong>作用域在語法解析時就已經確定了</strong>；<code>value = 2</code> 只能在 <code>fn2()</code> 裡作用，而 <code>fn2()</code> 裡的 <code>fn1()</code> 被執行時會向外查找全域的 <code>value = 1</code> 。</p>\n<p>如果是動態作用域的話會取到 <code>value = 2</code> 的值 ，因為變數的 <strong>作用域在函式調用的時候決定</strong>，因此當而 <code>fn2()</code> 裡的 <code>fn1()</code> 被執行時，會取到 <code>value = 2</code> 。</p>\n","text":"JavaScript是語法作用域(靜態作用域) 語法作用域 : 又稱靜態作用域，在語法解析時，就已經確定作用域，且不會再改變。 動態作用域 : 變數的作用域再函式調用的時候才會決定。 看看以下範例 : var value = 1; function fn1 () &#123; c...","link":"","photos":[],"count_time":{"symbolsCount":474,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":10,"path":"api/tags/JavaScript.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#JavaScript%E6%98%AF%E8%AA%9E%E6%B3%95%E4%BD%9C%E7%94%A8%E5%9F%9F-%E9%9D%9C%E6%85%8B%E4%BD%9C%E7%94%A8%E5%9F%9F\"><span class=\"toc-text\">JavaScript是語法作用域(靜態作用域)</span></a></li></ol>","author":{"name":"tommm2","slug":"blog-author","avatar":"https://i.postimg.cc/nzsgrNDd/new.jpg","link":"/","description":"紀錄學習筆記以及自己成長的過程","socials":{"github":"https://github.com/tommm2","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"cakeresume":{"icon":"fab fa-cuttlefish","link":"https://www.cakeresume.com/real-pro"}}}},"mapped":true,"prev_post":{"title":"JavaScript 核心(2)-執行環境與執行堆疊","uid":"30b605c41c930f0491bf4de6a3f75a4d","slug":"JavaScript核心(2)-執行環境與執行堆疊","date":"2021-10-08T07:27:36.000Z","updated":"2021-10-08T07:41:37.290Z","comments":true,"path":"api/articles/JavaScript核心(2)-執行環境與執行堆疊.json","keywords":"前端,技術,網頁開發,前端開發,網頁,JavaScript,CSS,HTML,Vue,Vue.js,前端筆記","cover":"https://i.postimg.cc/tC28h7Zc/javascript.png","text":"執行環境(Execution environment) 如果沒執行函式，函式裡的變數不會產生，並且需要執行函式才會產生執行屬於它的執行環境。 全域環境會在瀏覽器開啟或是 node.js 後端啟動時建立，並且是瀏覽器就會產生 window 全域變數，如果是 node.js 就會產生...","link":"","photos":[],"count_time":{"symbolsCount":585,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":10,"path":"api/tags/JavaScript.json"}],"author":{"name":"tommm2","slug":"blog-author","avatar":"https://i.postimg.cc/nzsgrNDd/new.jpg","link":"/","description":"紀錄學習筆記以及自己成長的過程","socials":{"github":"https://github.com/tommm2","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"cakeresume":{"icon":"fab fa-cuttlefish","link":"https://www.cakeresume.com/real-pro"}}}}},"next_post":{}}