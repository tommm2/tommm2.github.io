{"title":"JavaScript核心(11)-寬鬆相等、嚴格相等以及隱含轉型","uid":"de988f7d07d61276e6603d4f3929c261","slug":"JavaScript核心(11)-寬鬆相等、嚴格相等以及隱含轉型","date":"2021-10-11T04:47:50.000Z","updated":"2021-10-11T06:25:17.626Z","comments":true,"path":"api/articles/JavaScript核心(11)-寬鬆相等、嚴格相等以及隱含轉型.json","keywords":"前端,技術,網頁開發,前端開發,網頁,JavaScript,CSS,HTML,Vue,Vue.js,前端筆記","cover":"https://i.postimg.cc/tC28h7Zc/javascript.png","content":"<h3 id=\"寬鬆相等\"><a href=\"#寬鬆相等\" class=\"headerlink\" title=\"寬鬆相等 ( == )\"></a>寬鬆相等 ( == )</h3><p>寬鬆相等會先將比較值 “轉換成同型別” 後比較。轉換後（可能一個或兩個都被轉換），接著進行的幾乎和嚴格比較（===）一樣。 一般相等會對稱：<code>A == B</code> 等同 <code>B == A</code> ，無論 A 和 B 是什麼。（除了型別轉換的順序）</p>\n<h3 id=\"嚴格相等\"><a href=\"#嚴格相等\" class=\"headerlink\" title=\"嚴格相等 ( === )\"></a>嚴格相等 ( === )</h3><p>嚴格相等比較兩個值，而被比較的兩個值都 “不會轉換” 成其他型別。如果值是不同型別，就會被視為不相等。如果兩值型別相同但不是數字，若值相同，則為相等。此外，如果兩個值皆為數字，只要他們是 NaN 以外的同一值，或者 +0 和 -0，則為相等。</p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 寬鬆相等 : 在數字與布林或字串比對時，會將字串與布林值轉成數字</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true  備註：true轉成數字會是1、false會是0</span>\n\n<span class=\"token comment\">// 嚴格相等 : 會比較型別及數值</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">===</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// false</span>\nconsoel<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">===</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span>\n<span class=\"token comment\">// 特別案例</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">NaN</span> <span class=\"token operator\">===</span> <span class=\"token number\">NaN</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">0</span> <span class=\"token operator\">===</span> <span class=\"token operator\">+</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// true</span>\n\n<span class=\"token comment\">// 物件與非物件比對，會使用包裹物件做轉換</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 10</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true  備註: Number( [10] )回傳結果為 10</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'A'</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true 備註: String( ['A'] )回傳結果為 'A'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token constant\">A</span><span class=\"token operator\">:</span> <span class=\"token string\">'A'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// [object Object]</span>\n\n<span class=\"token comment\">// 物件與物件比對是透過參考位置來比對，所以以下結果會是 false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// false  </span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span>\n\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nb <span class=\"token operator\">=</span> a\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">==</span> b<span class=\"token punctuation\">)</span> <span class=\"token comment\">// true 備註:這裡是true的原因是b與a的參考位置一樣</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>詳細介紹可以參閱MDN的相等比較：</p>\n<p><a href=\"https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Equality_comparisons_and_sameness\">相等比較 - JavaScript | MDN</a></p>\n","text":"寬鬆相等 ( == )寬鬆相等會先將比較值 “轉換成同型別” 後比較。轉換後（可能一個或兩個都被轉換），接著進行的幾乎和嚴格比較（===）一樣。 一般相等會對稱：A == B 等同 B == A ，無論 A 和 B 是什麼。（除了型別轉換的順序） 嚴格相等 ( === )嚴格相等...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"JavaScript核心","slug":"JavaScript核心","count":15,"path":"api/categories/JavaScript核心.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":15,"path":"api/tags/JavaScript.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AF%AC%E9%AC%86%E7%9B%B8%E7%AD%89\"><span class=\"toc-text\">寬鬆相等 ( &#x3D;&#x3D; )</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9A%B4%E6%A0%BC%E7%9B%B8%E7%AD%89\"><span class=\"toc-text\">嚴格相等 ( &#x3D;&#x3D;&#x3D; )</span></a></li></ol>","author":{"name":"tommm2","slug":"blog-author","avatar":"https://i.postimg.cc/nzsgrNDd/new.jpg","link":"/","description":"紀錄學習筆記以及自己成長的過程","socials":{"github":"https://github.com/tommm2","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"cakeresume":{"icon":"fab fa-cuttlefish","link":"https://www.cakeresume.com/real-pro"}}}},"mapped":true,"prev_post":{"title":"JavaScript核心(12)- Truth、Falsy","uid":"d65118ec8977c8f3d7fc37b754ab5f87","slug":"JavaScript核心(12)-Truth、Falsy","date":"2021-10-11T04:52:40.000Z","updated":"2021-10-11T06:25:16.303Z","comments":true,"path":"api/articles/JavaScript核心(12)-Truth、Falsy.json","keywords":"前端,技術,網頁開發,前端開發,網頁,JavaScript,CSS,HTML,Vue,Vue.js,前端筆記","cover":"https://i.postimg.cc/tC28h7Zc/javascript.png","text":"在JavaScript中，Truthy (真值) 指的是布林值中，轉換後結果為真的值。所有值都是真值，除非它們被定義為假值，如：false、0、null、undefined、NaN 、&quot;&quot;、 &#39;&#39; 。 以下範例將被轉換成true，if裡的程式碼...","link":"","photos":[],"count_time":{"symbolsCount":413,"symbolsTime":"1 mins."},"categories":[{"name":"JavaScript核心","slug":"JavaScript核心","count":15,"path":"api/categories/JavaScript核心.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":15,"path":"api/tags/JavaScript.json"}],"author":{"name":"tommm2","slug":"blog-author","avatar":"https://i.postimg.cc/nzsgrNDd/new.jpg","link":"/","description":"紀錄學習筆記以及自己成長的過程","socials":{"github":"https://github.com/tommm2","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"cakeresume":{"icon":"fab fa-cuttlefish","link":"https://www.cakeresume.com/real-pro"}}}}},"next_post":{"title":"JavaScript核心(10)-運算子、優先性與相依性","uid":"eabca4b5b506789d245f8d75823a2f80","slug":"JavaScript核心(10)-運算子、優先性與相依性","date":"2021-10-08T09:38:07.000Z","updated":"2021-10-11T06:25:22.068Z","comments":true,"path":"api/articles/JavaScript核心(10)-運算子、優先性與相依性.json","keywords":"前端,技術,網頁開發,前端開發,網頁,JavaScript,CSS,HTML,Vue,Vue.js,前端筆記","cover":"https://i.postimg.cc/tC28h7Zc/javascript.png","text":"運算子JavaScript 具有二元運算子及一元運算子，以及比較特別的(條件)三元運算子。 一元運算子具備一個運算元，一個運算子 運算子 運算元 運算元 運算子 // 例如: x++ 或 ++x 或 typeof x 、 delete x 二元運算子具備兩個運算元，一個在前，一個...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"JavaScript核心","slug":"JavaScript核心","count":15,"path":"api/categories/JavaScript核心.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":15,"path":"api/tags/JavaScript.json"}],"author":{"name":"tommm2","slug":"blog-author","avatar":"https://i.postimg.cc/nzsgrNDd/new.jpg","link":"/","description":"紀錄學習筆記以及自己成長的過程","socials":{"github":"https://github.com/tommm2","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"cakeresume":{"icon":"fab fa-cuttlefish","link":"https://www.cakeresume.com/real-pro"}}}}}}