{"title":"JavaScript核心(10)-運算子、優先性與相依性","uid":"eabca4b5b506789d245f8d75823a2f80","slug":"JavaScript核心(10)-運算子、優先性與相依性","date":"2021-10-08T09:38:07.000Z","updated":"2021-10-08T10:17:08.831Z","comments":true,"path":"api/articles/JavaScript核心(10)-運算子、優先性與相依性.json","keywords":"前端,技術,網頁開發,前端開發,網頁,JavaScript,CSS,HTML,Vue,Vue.js,前端筆記","cover":"https://i.postimg.cc/tC28h7Zc/javascript.png","content":"<h2 id=\"運算子\"><a href=\"#運算子\" class=\"headerlink\" title=\"運算子\"></a>運算子</h2><p>JavaScript 具有二元運算子及一元運算子，以及比較特別的(條件)三元運算子。</p>\n<h3 id=\"一元運算子\"><a href=\"#一元運算子\" class=\"headerlink\" title=\"一元運算子\"></a>一元運算子</h3><p>具備一個運算元，一個運算子</p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\">運算子 運算元\n運算元 運算子　　　<span class=\"token comment\">// 例如: x++ 或 ++x　或 typeof x 、 delete x</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"二元運算子\"><a href=\"#二元運算子\" class=\"headerlink\" title=\"二元運算子\"></a>二元運算子</h3><p>具備兩個運算元，一個在前，一個在後</p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\">運算元<span class=\"token number\">1</span> 運算子 運算元<span class=\"token number\">2</span>  <span class=\"token comment\">// 例如 1 + 1 或 a * b</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"三元運算子\"><a href=\"#三元運算子\" class=\"headerlink\" title=\"三元運算子\"></a>三元運算子</h3><p>具備一個條件式、兩個表達式。條件後會跟著一個問號，如果條件是 <code>true</code>，冒號前的表達式會被執行，否則執行冒號後的表達式</p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\">condition <span class=\"token operator\">?</span> express1 <span class=\"token operator\">:</span> express2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>看看以下範例：</p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">var</span> bmi <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>bmi <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">'偏瘦'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'有點肉'</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 回傳肉肉的</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>如果 <code>bmi &lt; 20</code> 是 <code>true</code>，就顯示偏瘦，否則就顯示有點肉，並且會回傳一個結果。</p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">TIP</p>\n<p>三元運算子可以在條件式裡面再包一個條件式，就像 if 裡面 再包一個 if ，如下範例：</p>\n</div>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">var</span> bmi <span class=\"token operator\">=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>bmi <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// bmi 小於 20 就進入下一個三元運算子，下面就以此類推</span>\n<span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>bmi <span class=\"token operator\">&lt;</span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">'超級瘦'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'普通瘦'</span>  \n<span class=\"token operator\">:</span> <span class=\"token string\">'有點肉'</span><span class=\"token punctuation\">;</span>   \n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 執行結果: 超級瘦</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<hr>\n<h2 id=\"運算子優先性及相依性\"><a href=\"#運算子優先性及相依性\" class=\"headerlink\" title=\"運算子優先性及相依性\"></a>運算子優先性及相依性</h2><h3 id=\"Precedence-優先性\"><a href=\"#Precedence-優先性\" class=\"headerlink\" title=\"Precedence 優先性\"></a>Precedence 優先性</h3><p>運算子優先序( Operator precedence )決定了運算子彼此間被語法解析的方式，優先序高的運算子會成為優先序低的運算元，看看以下範例：</p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 執行結果: 8</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>結果為甚麼是 8 而不是 12 呢 ? 請看下面的優先性表格，數字越高優先性越高：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">優先性</th>\n<th align=\"center\">相依性</th>\n<th align=\"center\">運算子</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">15</td>\n<td align=\"center\">從右至左</td>\n<td align=\"center\">…**…</td>\n</tr>\n<tr>\n<td align=\"center\">14</td>\n<td align=\"center\">從左至右</td>\n<td align=\"center\">…*…</td>\n</tr>\n<tr>\n<td align=\"center\">14</td>\n<td align=\"center\">從左至右</td>\n<td align=\"center\">…/…</td>\n</tr>\n<tr>\n<td align=\"center\">14</td>\n<td align=\"center\">從左至右</td>\n<td align=\"center\">…%…</td>\n</tr>\n<tr>\n<td align=\"center\">13</td>\n<td align=\"center\">從右至左</td>\n<td align=\"center\">…+…</td>\n</tr>\n<tr>\n<td align=\"center\">13</td>\n<td align=\"center\">從右至左</td>\n<td align=\"center\">…-…</td>\n</tr>\n</tbody></table>\n<p><code>*</code> 的優先性是 <code>14</code>，而 <code>+</code> 是 <code>13</code>，優先性高的會先運算，運算出來的數值變成優先性低的運算元，也就是 <code>2 ＊ 3</code> 的數值會變成 <code>+</code> 的運算元，之後再賦值到變數 <code>a</code>。</p>\n<h3 id=\"Associativity-相依性\"><a href=\"#Associativity-相依性\" class=\"headerlink\" title=\"Associativity 相依性\"></a>Associativity 相依性</h3><p>優先序相同時，就會使用相依性來決定運算方向，參考以下表格：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">優先性</th>\n<th align=\"center\">相依性</th>\n<th align=\"center\">運算子</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">11</td>\n<td align=\"center\">從左至右</td>\n<td align=\"center\">…&lt;…</td>\n</tr>\n<tr>\n<td align=\"center\">11</td>\n<td align=\"center\">從左至右</td>\n<td align=\"center\">…&lt;=…</td>\n</tr>\n<tr>\n<td align=\"center\">11</td>\n<td align=\"center\">從左至右</td>\n<td align=\"center\">…&gt;…</td>\n</tr>\n<tr>\n<td align=\"center\">11</td>\n<td align=\"center\">從左至右</td>\n<td align=\"center\">…&gt;=…</td>\n</tr>\n<tr>\n<td align=\"center\">16</td>\n<td align=\"center\">從右至左</td>\n<td align=\"center\">++…</td>\n</tr>\n<tr>\n<td align=\"center\">17</td>\n<td align=\"center\">無</td>\n<td align=\"center\">…++</td>\n</tr>\n<tr>\n<td align=\"center\">14</td>\n<td align=\"center\">從左至右</td>\n<td align=\"center\">…*…</td>\n</tr>\n</tbody></table>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 範例 1.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">></span> <span class=\"token number\">2</span> <span class=\"token operator\">></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span>\n\n<span class=\"token comment\">// 範例 2.</span>\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span> \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">++</span> <span class=\"token operator\">*</span> a<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 2</span>\n\n<span class=\"token comment\">// 範例3.</span>\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token operator\">++</span>b <span class=\"token operator\">*</span> b<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 4</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","feature":true,"text":"運算子JavaScript 具有二元運算子及一元運算子，以及比較特別的(條件)三元運算子。 一元運算子具備一個運算元，一個運算子 運算子 運算元 運算元 運算子 // 例如: x++ 或 ++x 或 typeof x 、 delete x 二元運算子具備兩個運算元，一個在前，一個...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":10,"path":"api/tags/JavaScript.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%81%8B%E7%AE%97%E5%AD%90\"><span class=\"toc-text\">運算子</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E5%85%83%E9%81%8B%E7%AE%97%E5%AD%90\"><span class=\"toc-text\">一元運算子</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E5%85%83%E9%81%8B%E7%AE%97%E5%AD%90\"><span class=\"toc-text\">二元運算子</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%89%E5%85%83%E9%81%8B%E7%AE%97%E5%AD%90\"><span class=\"toc-text\">三元運算子</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%81%8B%E7%AE%97%E5%AD%90%E5%84%AA%E5%85%88%E6%80%A7%E5%8F%8A%E7%9B%B8%E4%BE%9D%E6%80%A7\"><span class=\"toc-text\">運算子優先性及相依性</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Precedence-%E5%84%AA%E5%85%88%E6%80%A7\"><span class=\"toc-text\">Precedence 優先性</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Associativity-%E7%9B%B8%E4%BE%9D%E6%80%A7\"><span class=\"toc-text\">Associativity 相依性</span></a></li></ol></li></ol>","author":{"name":"tommm2","slug":"blog-author","avatar":"https://i.postimg.cc/nzsgrNDd/new.jpg","link":"/","description":"紀錄學習筆記以及自己成長的過程","socials":{"github":"https://github.com/tommm2","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"cakeresume":{"icon":"fab fa-cuttlefish","link":"https://www.cakeresume.com/real-pro"}}}},"mapped":true,"prev_post":{},"next_post":{"title":"JavaScript核心(9)-型別","uid":"81fd55e235ac1d2da0d07a77f95b851b","slug":"JavaScript核心(9)-型別","date":"2021-10-08T08:55:55.000Z","updated":"2021-10-08T09:36:50.960Z","comments":true,"path":"api/articles/JavaScript核心(9)-型別.json","keywords":"前端,技術,網頁開發,前端開發,網頁,JavaScript,CSS,HTML,Vue,Vue.js,前端筆記","cover":"https://i.postimg.cc/tC28h7Zc/javascript.png","text":"動態型別JavaScript是弱型別，也能說是動態程式語言。也就是說不必像 C 語言一樣特別宣告變數的型別。程式在執行時會自動轉換並確立型別。 var a = 42; // a 目前是數字 var a = 'hello'; // a 目前是字串 var a = true; // ...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":10,"path":"api/tags/JavaScript.json"}],"author":{"name":"tommm2","slug":"blog-author","avatar":"https://i.postimg.cc/nzsgrNDd/new.jpg","link":"/","description":"紀錄學習筆記以及自己成長的過程","socials":{"github":"https://github.com/tommm2","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"cakeresume":{"icon":"fab fa-cuttlefish","link":"https://www.cakeresume.com/real-pro"}}}},"feature":true}}