{"title":"JavaScript核心(14)-物件取值、新增、刪除","uid":"3575803f69cb1026cdab940a86a96665","slug":"JavaScript核心(14)-物件取值、新增、刪除","date":"2021-10-11T07:21:03.000Z","updated":"2021-10-11T07:36:57.465Z","comments":true,"path":"api/articles/JavaScript核心(14)-物件取值、新增、刪除.json","keywords":"前端,技術,網頁開發,前端開發,網頁,JavaScript,CSS,HTML,Vue,Vue.js,前端筆記","cover":"https://i.postimg.cc/tC28h7Zc/javascript.png","content":"<h2 id=\"物件新增及取值\"><a href=\"#物件新增及取值\" class=\"headerlink\" title=\"物件新增及取值\"></a>物件新增及取值</h2><p>物件取值的方式有兩種，有 <code>點記法(Dot notation)</code> 以及 <code>中括號記法</code>：</p>\n<h3 id=\"點記法\"><a href=\"#點記法\" class=\"headerlink\" title=\"點記法\"></a>點記法</h3><p>點記法很直觀的，就是運用 <code>.</code> 在物件裡新增屬性：</p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">var</span> family <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\nfamily<span class=\"token punctuation\">.</span>dog <span class=\"token operator\">=</span> <span class=\"token string\">'doggy'</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>family<span class=\"token punctuation\">.</span>dog<span class=\"token punctuation\">)</span> <span class=\"token comment\">// doggy</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"中括號記法\"><a href=\"#中括號記法\" class=\"headerlink\" title=\"中括號記法\"></a>中括號記法</h3><p>透過相關的名稱來選擇對象。中括號記法不僅能透過 <code>字串</code> 的方式來取值，也能透過 <code>變數</code> 的方式來取值，並且可以用 <code>數字</code> 或者是 <code>特殊符號</code> 作為屬性名稱：</p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">var</span> family <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n\tname<span class=\"token operator\">:</span> <span class=\"token string\">'tom'</span><span class=\"token punctuation\">,</span>\n\tdeposite<span class=\"token operator\">:</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span>\n\tmembers<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\t\tmom<span class=\"token operator\">:</span> <span class=\"token string\">'adrew'</span><span class=\"token punctuation\">,</span>\n\t\tsister<span class=\"token operator\">:</span> <span class=\"token string\">'lucy'</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token number\">1</span><span class=\"token operator\">:</span> <span class=\"token string\">'我是1'</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">'*$$*'</span><span class=\"token operator\">:</span> <span class=\"token string\">'我是錢字號還有星星'</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token function-variable function\">callMyName</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I'm Tom\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>family<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// tom</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>family<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// '我是1'</span>\n\n<span class=\"token comment\">// 雖說是特殊符號，但一樣是使用字串方式取值、但點記法做不到這件事</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>family<span class=\"token punctuation\">[</span><span class=\"token string\">'*$$*'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 我是錢字號還有星星</span>\n\n<span class=\"token comment\">// 函式呼叫方式</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>family<span class=\"token punctuation\">.</span><span class=\"token function\">callMyName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// I'm Tom</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>family<span class=\"token punctuation\">[</span><span class=\"token string\">'callMyName'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// I'm Tom</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"delete-操作符\"><a href=\"#delete-操作符\" class=\"headerlink\" title=\"delete 操作符\"></a>delete 操作符</h2><p><code>delete</code> 能刪除物件的屬性或方法，但不會刪除物件原型的屬性或方法。</p>\n<p>試著用 <code>delete</code> 把一些屬性刪除:</p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">var</span> family <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n\tname<span class=\"token operator\">:</span> <span class=\"token string\">'tom'</span><span class=\"token punctuation\">,</span>\n\tdeposite<span class=\"token operator\">:</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span>\n\tmembers<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\t\tmom<span class=\"token operator\">:</span> <span class=\"token string\">'adrew'</span><span class=\"token punctuation\">,</span>\n\t\tsister<span class=\"token operator\">:</span> <span class=\"token string\">'lucy'</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token number\">1</span><span class=\"token operator\">:</span> <span class=\"token string\">'我是1'</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">'*$$*'</span><span class=\"token operator\">:</span> <span class=\"token string\">'我是錢字號還有星星'</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token function-variable function\">callMyName</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I'm Tom\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">delete</span> family<span class=\"token punctuation\">[</span><span class=\"token string\">'*$$*'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 會回傳 true</span>\n<span class=\"token keyword\">delete</span> family<span class=\"token punctuation\">.</span><span class=\"token function\">callMyName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 會回傳 true、 I'm Tom</span>\n\n<span class=\"token comment\">// console之後會發現值不見了</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>family<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"額外補充：變數及物件屬性的差異\"><a href=\"#額外補充：變數及物件屬性的差異\" class=\"headerlink\" title=\"額外補充：變數及物件屬性的差異\"></a>額外補充：變數及物件屬性的差異</h2><p>輸入以下程式碼，會發現 a 和 b 的被賦予到 window 這個根物件上面了，但這兩者實際上是有所不同的：</p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\nb <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>winodw<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>特別說明一下，如果是一個變數，是無法使用 <code>delete</code> 刪除的。來試試看把 a 和 b 都刪除，會發現 a 還留著、但是 b 會消失，原因是 a 是以變數方式作新增，所以無法被刪除、而 <code>b = 3</code> 實際上是執行這段 <code>window.b = 3</code> ，如下範例：</p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\nb <span class=\"token operator\">=</span> <span class=\"token number\">3</span>  <span class=\"token comment\">// 這裡實際上會變成這樣 :　window.b = 3</span>\n\n<span class=\"token keyword\">delete</span> a <span class=\"token comment\">// 會回傳 false ， 因 a 是變數，無法被刪除</span>\n<span class=\"token keyword\">delete</span> b <span class=\"token comment\">// 回傳 true</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>winodw<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","feature":true,"text":"物件新增及取值物件取值的方式有兩種，有 點記法(Dot notation) 以及 中括號記法： 點記法點記法很直觀的，就是運用 . 在物件裡新增屬性： var family = &#123;&#125; family.dog = 'doggy' console.log(famil...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"JavaScript核心","slug":"JavaScript核心","count":15,"path":"api/categories/JavaScript核心.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":15,"path":"api/tags/JavaScript.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%89%A9%E4%BB%B6%E6%96%B0%E5%A2%9E%E5%8F%8A%E5%8F%96%E5%80%BC\"><span class=\"toc-text\">物件新增及取值</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%BB%9E%E8%A8%98%E6%B3%95\"><span class=\"toc-text\">點記法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%8B%AC%E8%99%9F%E8%A8%98%E6%B3%95\"><span class=\"toc-text\">中括號記法</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#delete-%E6%93%8D%E4%BD%9C%E7%AC%A6\"><span class=\"toc-text\">delete 操作符</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A1%8D%E5%A4%96%E8%A3%9C%E5%85%85%EF%BC%9A%E8%AE%8A%E6%95%B8%E5%8F%8A%E7%89%A9%E4%BB%B6%E5%B1%AC%E6%80%A7%E7%9A%84%E5%B7%AE%E7%95%B0\"><span class=\"toc-text\">額外補充：變數及物件屬性的差異</span></a></li></ol>","author":{"name":"tommm2","slug":"blog-author","avatar":"https://i.postimg.cc/nzsgrNDd/new.jpg","link":"/","description":"紀錄學習筆記以及自己成長的過程","socials":{"github":"https://github.com/tommm2","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"cakeresume":{"icon":"fab fa-cuttlefish","link":"https://www.cakeresume.com/real-pro"}}}},"mapped":true,"prev_post":{"title":"JavaScript核心觀念 (15)- 物件與純值","uid":"2296c2316579b79c6d630a59768df5d0","slug":"JavaScript核心觀念(15)-物件與純值","date":"2021-10-11T07:37:24.000Z","updated":"2021-10-11T07:57:37.129Z","comments":true,"path":"api/articles/JavaScript核心觀念(15)-物件與純值.json","keywords":"前端,技術,網頁開發,前端開發,網頁,JavaScript,CSS,HTML,Vue,Vue.js,前端筆記","cover":"https://i.postimg.cc/tC28h7Zc/javascript.png","text":"在上篇提及了物件可用點記號或中括號來新增值一樣可新增屬性，那我們來看看以下範例： var newString &#x3D; &#39;Hello World&#39; newString.name &#x3D; &#39;new Hello&#39; console.log(ne...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"JavaScript核心","slug":"JavaScript核心","count":15,"path":"api/categories/JavaScript核心.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":15,"path":"api/tags/JavaScript.json"}],"author":{"name":"tommm2","slug":"blog-author","avatar":"https://i.postimg.cc/nzsgrNDd/new.jpg","link":"/","description":"紀錄學習筆記以及自己成長的過程","socials":{"github":"https://github.com/tommm2","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"cakeresume":{"icon":"fab fa-cuttlefish","link":"https://www.cakeresume.com/real-pro"}}}},"feature":true},"next_post":{"title":"JavaScript核心(13)-邏輯運算子及函式預設值","uid":"c5d47a728f0d1387eb297fe3f1645b3f","slug":"JavaScript核心(13)-邏輯運算子及函式預設值","date":"2021-10-11T04:54:04.000Z","updated":"2021-10-11T06:25:24.704Z","comments":true,"path":"api/articles/JavaScript核心(13)-邏輯運算子及函式預設值.json","keywords":"前端,技術,網頁開發,前端開發,網頁,JavaScript,CSS,HTML,Vue,Vue.js,前端筆記","cover":"https://i.postimg.cc/tC28h7Zc/javascript.png","text":"邏輯運算子通常被用於 Boolean; 使用於 Boolean 時，它們會回傳 Boolean type(true or false)。 但是 &amp;&amp; 和 || 運算子實際上是回傳指定的運算元之一，所以如果用在不是布林值時，它會回傳一個不是 Boolean Type...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"JavaScript核心","slug":"JavaScript核心","count":15,"path":"api/categories/JavaScript核心.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":15,"path":"api/tags/JavaScript.json"}],"author":{"name":"tommm2","slug":"blog-author","avatar":"https://i.postimg.cc/nzsgrNDd/new.jpg","link":"/","description":"紀錄學習筆記以及自己成長的過程","socials":{"github":"https://github.com/tommm2","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"cakeresume":{"icon":"fab fa-cuttlefish","link":"https://www.cakeresume.com/real-pro"}}}},"feature":true}}