{"title":"JavaScript核心(13)-邏輯運算子及函式預設值","uid":"c5d47a728f0d1387eb297fe3f1645b3f","slug":"JavaScript核心(13)-邏輯運算子及函式預設值","date":"2021-10-11T04:54:04.000Z","updated":"2021-10-11T06:25:24.704Z","comments":true,"path":"api/articles/JavaScript核心(13)-邏輯運算子及函式預設值.json","keywords":"前端,技術,網頁開發,前端開發,網頁,JavaScript,CSS,HTML,Vue,Vue.js,前端筆記","cover":"https://i.postimg.cc/tC28h7Zc/javascript.png","content":"<h2 id=\"邏輯運算子\"><a href=\"#邏輯運算子\" class=\"headerlink\" title=\"邏輯運算子\"></a>邏輯運算子</h2><p>通常被用於 Boolean; 使用於 Boolean 時，它們會回傳 Boolean type(true or false)。 但是 <code>&amp;&amp;</code> 和 <code>||</code> 運算子實際上是回傳指定的運算元之一，所以如果用在不是布林值時，它會回傳一個不是 Boolean Type 的值。 </p>\n<h3 id=\"邏輯-AND-amp-amp\"><a href=\"#邏輯-AND-amp-amp\" class=\"headerlink\" title=\"邏輯 AND (&amp;&amp;) :\"></a>邏輯 AND (&amp;&amp;) :</h3><p>Usage：<code>運算式1 &amp;&amp; 運算式2</code></p>\n<p>如果 <code>運算式1</code> 是 <code>false</code>，回傳 <code>運算式1</code>；否則，回傳 <code>運算式2</code> 。 &amp;&amp; 只有在 兩個運算元都是 <code>true</code> 時才會回傳 <code>true</code>，否則回傳 <code>false</code>。</p>\n<h3 id=\"邏輯-OR-：\"><a href=\"#邏輯-OR-：\" class=\"headerlink\" title=\"邏輯 OR ( || )：\"></a>邏輯 OR ( || )：</h3><p>Usage：<code>運算式1 || 運算式2</code></p>\n<p>如果 <code>運算式1</code> 是 <code>true</code> ，回傳 <code>運算式1</code>；否則，回傳 <code>運算式2</code>。 因此，<code>||</code> 在兩個運算元有任一個是 <code>true</code> 時就會回傳 <code>true</code>，否則回傳 <code>false</code>。</p>\n<h3 id=\"邏輯-NOT-：\"><a href=\"#邏輯-NOT-：\" class=\"headerlink\" title=\"邏輯 NOT ( ! )：\"></a>邏輯 NOT ( ! )：</h3><p>Usage：<code>!運算式</code></p>\n<p>描述：如果一個運算元能被轉換成 <code>true</code> 時，回傳 <code>false</code>，否則回傳 <code>true</code>。</p>\n<p>參考以下範例：</p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">var</span> a1 <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token boolean\">true</span>     <span class=\"token comment\">// f &amp;&amp; t 回傳 null</span>\n<span class=\"token keyword\">var</span> a2 <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'a'</span> <span class=\"token comment\">// f &amp;&amp; t 回傳 undefined</span>\n<span class=\"token keyword\">var</span> a3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'z'</span>        <span class=\"token comment\">// t &amp;&amp; t 回傳 'z'</span>\n\n<span class=\"token keyword\">var</span> b1 <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> <span class=\"token boolean\">true</span>     <span class=\"token comment\">// f || t 回傳 true</span>\n<span class=\"token keyword\">var</span> b2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token string\">'aa'</span>       <span class=\"token comment\">// t || t 回傳 []</span>\n<span class=\"token keyword\">var</span> b3 <span class=\"token operator\">=</span> <span class=\"token number\">NaN</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">undefined</span> <span class=\"token comment\">// f || f 回傳 undefined</span>\n\n<span class=\"token keyword\">var</span> c1 <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token keyword\">null</span>             <span class=\"token comment\">// !f 回傳 true</span>\n<span class=\"token keyword\">var</span> c2 <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>               <span class=\"token comment\">// !t 回傳 false</span>\n<span class=\"token keyword\">var</span> c3 <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span>                <span class=\"token comment\">// !f 回傳 true</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>除此之外還可以使用邏輯運算子來預設數值，避免出現 <code>undefined</code> 或 <code>NaN</code> 的錯誤，參考以下範例：</p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">var</span> originCash <span class=\"token operator\">=</span> <span class=\"token number\">500</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">updateEasyCard</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cash</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  cash <span class=\"token operator\">=</span> cash <span class=\"token operator\">||</span> <span class=\"token number\">100</span>  <span class=\"token comment\">// cash 會是 undefined ，所以回傳 100 </span>\n  <span class=\"token keyword\">var</span> money <span class=\"token operator\">=</span> cash <span class=\"token operator\">+</span> originCash<span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我有 '</span> <span class=\"token operator\">+</span> money <span class=\"token operator\">+</span> <span class=\"token string\">' 元'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">updateEasyCard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>特別要注意的是如果再 <code>updateEasyCard()</code> 帶入 0 的話，在邏輯運算裡會被判定成假值，所以可以透過三元運算子來處理：</p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">var</span> originCash <span class=\"token operator\">=</span> <span class=\"token number\">500</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">updateEasyCard</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cash</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  cash <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>cash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>cash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 當 cash 是數值或為 0 時，使用 cash 的數值</span>\n  <span class=\"token comment\">// 如果 cash 是 NaN 時，則直接套用 500</span>\n  cash <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>cash <span class=\"token operator\">||</span> cash <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span> cash<span class=\"token operator\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> money <span class=\"token operator\">=</span> cash <span class=\"token operator\">+</span> originCash<span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我有 '</span> <span class=\"token operator\">+</span> money <span class=\"token operator\">+</span> <span class=\"token string\">' 元'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">updateEasyCard</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","feature":true,"text":"邏輯運算子通常被用於 Boolean; 使用於 Boolean 時，它們會回傳 Boolean type(true or false)。 但是 &amp;&amp; 和 || 運算子實際上是回傳指定的運算元之一，所以如果用在不是布林值時，它會回傳一個不是 Boolean Type...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"JavaScript核心","slug":"JavaScript核心","count":15,"path":"api/categories/JavaScript核心.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":15,"path":"api/tags/JavaScript.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%82%8F%E8%BC%AF%E9%81%8B%E7%AE%97%E5%AD%90\"><span class=\"toc-text\">邏輯運算子</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%82%8F%E8%BC%AF-AND-amp-amp\"><span class=\"toc-text\">邏輯 AND (&amp;&amp;) :</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%82%8F%E8%BC%AF-OR-%EF%BC%9A\"><span class=\"toc-text\">邏輯 OR ( || )：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%82%8F%E8%BC%AF-NOT-%EF%BC%9A\"><span class=\"toc-text\">邏輯 NOT ( ! )：</span></a></li></ol></li></ol>","author":{"name":"tommm2","slug":"blog-author","avatar":"https://i.postimg.cc/nzsgrNDd/new.jpg","link":"/","description":"紀錄學習筆記以及自己成長的過程","socials":{"github":"https://github.com/tommm2","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"cakeresume":{"icon":"fab fa-cuttlefish","link":"https://www.cakeresume.com/real-pro"}}}},"mapped":true,"prev_post":{"title":"JavaScript核心(14)-物件取值、新增、刪除","uid":"3575803f69cb1026cdab940a86a96665","slug":"JavaScript核心(14)-物件取值、新增、刪除","date":"2021-10-11T07:21:03.000Z","updated":"2021-10-11T07:36:57.465Z","comments":true,"path":"api/articles/JavaScript核心(14)-物件取值、新增、刪除.json","keywords":"前端,技術,網頁開發,前端開發,網頁,JavaScript,CSS,HTML,Vue,Vue.js,前端筆記","cover":"https://i.postimg.cc/tC28h7Zc/javascript.png","text":"物件新增及取值物件取值的方式有兩種，有 點記法(Dot notation) 以及 中括號記法： 點記法點記法很直觀的，就是運用 . 在物件裡新增屬性： var family = &#123;&#125; family.dog = 'doggy' console.log(famil...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"JavaScript核心","slug":"JavaScript核心","count":15,"path":"api/categories/JavaScript核心.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":15,"path":"api/tags/JavaScript.json"}],"author":{"name":"tommm2","slug":"blog-author","avatar":"https://i.postimg.cc/nzsgrNDd/new.jpg","link":"/","description":"紀錄學習筆記以及自己成長的過程","socials":{"github":"https://github.com/tommm2","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"cakeresume":{"icon":"fab fa-cuttlefish","link":"https://www.cakeresume.com/real-pro"}}}},"feature":true},"next_post":{"title":"JavaScript核心(12)- Truth、Falsy","uid":"d65118ec8977c8f3d7fc37b754ab5f87","slug":"JavaScript核心(12)-Truth、Falsy","date":"2021-10-11T04:52:40.000Z","updated":"2021-10-11T06:25:16.303Z","comments":true,"path":"api/articles/JavaScript核心(12)-Truth、Falsy.json","keywords":"前端,技術,網頁開發,前端開發,網頁,JavaScript,CSS,HTML,Vue,Vue.js,前端筆記","cover":"https://i.postimg.cc/tC28h7Zc/javascript.png","text":"在JavaScript中，Truthy (真值) 指的是布林值中，轉換後結果為真的值。所有值都是真值，除非它們被定義為假值，如：false、0、null、undefined、NaN 、&quot;&quot;、 &#39;&#39; 。 以下範例將被轉換成true，if裡的程式碼...","link":"","photos":[],"count_time":{"symbolsCount":413,"symbolsTime":"1 mins."},"categories":[{"name":"JavaScript核心","slug":"JavaScript核心","count":15,"path":"api/categories/JavaScript核心.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":15,"path":"api/tags/JavaScript.json"}],"author":{"name":"tommm2","slug":"blog-author","avatar":"https://i.postimg.cc/nzsgrNDd/new.jpg","link":"/","description":"紀錄學習筆記以及自己成長的過程","socials":{"github":"https://github.com/tommm2","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"cakeresume":{"icon":"fab fa-cuttlefish","link":"https://www.cakeresume.com/real-pro"}}}}}}