{"title":"JavaScript 核心(3)-範圍鍊(Scope chain)","uid":"f1ee2e5d0a69b1f49650eb6d8658482d","slug":"JavaScript核心(3)-範圍鍊","date":"2021-10-08T07:37:55.000Z","updated":"2021-10-08T08:13:41.869Z","comments":true,"path":"api/articles/JavaScript核心(3)-範圍鍊.json","keywords":"前端,技術,網頁開發,前端開發,網頁,JavaScript,CSS,HTML,Vue,Vue.js,前端筆記","cover":"https://i.postimg.cc/tC28h7Zc/javascript.png","content":"<p>外部環境會依照函數本身的環境去尋找要取用的變數(程式碼寫在哪裡)，如果找不到會再往範圍鏈上去找，直到全域執行環境，</p>\n<p>參考以下程式碼 : </p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">var</span> value <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">fn1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">fn2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">var</span> value <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">fn1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">fn2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>這裡 <code>fn1()</code> 和 <code>fn2()</code> 的範圍鍊指向全域環境，跟執行環境沒任何關係；在執行 <code>fn2()</code> 時，裡面的 <code>fn1()</code> 會查找到全域的 <code>value</code>，而不是 <code>fn2()</code> 裡的 <code>value</code>。</p>\n<p>另一個範例：</p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">var</span> person <span class=\"token operator\">=</span> <span class=\"token string\">'老媽'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hi'</span> <span class=\"token operator\">+</span>　person<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">doWork</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> preson <span class=\"token operator\">=</span> <span class=\"token string\">'老爸'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">mettAuntie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> person <span class=\"token operator\">=</span> <span class=\"token string\">'阿姨'</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'哈囉~'</span> <span class=\"token operator\">+</span> person<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">mettAuntie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">doWork</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// hi老媽  哈囉~阿姨 </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>執行 <code>doWork()</code> 後：</p>\n<ol>\n<li>執行 <code>sayHi()</code> ，函式裡沒有 <code>person</code> 變數，所以向外查找到全域的 <code>person</code>，印出 <code>hi老媽</code>。</li>\n<li>執行 <code>mettAuntie()</code>，函式裡有 <code>person</code>，所以直接取用它，印出 <code>哈囉~阿姨</code>。 </li>\n</ol>\n","text":"外部環境會依照函數本身的環境去尋找要取用的變數(程式碼寫在哪裡)，如果找不到會再往範圍鏈上去找，直到全域執行環境， 參考以下程式碼 : var value = 1; function fn1() &#123; console.log(value); &#125; function...","link":"","photos":[],"count_time":{"symbolsCount":710,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":10,"path":"api/tags/JavaScript.json"}],"toc":"","author":{"name":"tommm2","slug":"blog-author","avatar":"https://i.postimg.cc/nzsgrNDd/new.jpg","link":"/","description":"紀錄學習筆記以及自己成長的過程","socials":{"github":"https://github.com/tommm2","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"cakeresume":{"icon":"fab fa-cuttlefish","link":"https://www.cakeresume.com/real-pro"}}}},"mapped":true,"prev_post":{"title":"JavaScript 核心(4)-提升(hoisting)","uid":"fb2e8d543ead028edd5fc18c6f464347","slug":"JavaScript核心(4)-提升","date":"2021-10-08T07:49:42.000Z","updated":"2021-10-08T08:33:46.988Z","comments":true,"path":"api/articles/JavaScript核心(4)-提升.json","keywords":"前端,技術,網頁開發,前端開發,網頁,JavaScript,CSS,HTML,Vue,Vue.js,前端筆記","cover":"https://i.postimg.cc/tC28h7Zc/javascript.png","text":"Hoisting(提升)是一種釐清 JaveScript 在執行階段如何運行的思路（尤其是在創建和執行階段）。然而，提升可能會讓人誤解：例如，提升看起來是單純將變數和函式宣告，移動到程式區塊的頂端，然而並非如此。變數和函數的宣告會在編譯階段就被放入記憶體，但實際位置和程式碼中完全...","link":"","photos":[],"count_time":{"symbolsCount":817,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":10,"path":"api/tags/JavaScript.json"}],"author":{"name":"tommm2","slug":"blog-author","avatar":"https://i.postimg.cc/nzsgrNDd/new.jpg","link":"/","description":"紀錄學習筆記以及自己成長的過程","socials":{"github":"https://github.com/tommm2","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"cakeresume":{"icon":"fab fa-cuttlefish","link":"https://www.cakeresume.com/real-pro"}}}}},"next_post":{"title":"JavaScript 核心(2)-執行環境與執行堆疊","uid":"30b605c41c930f0491bf4de6a3f75a4d","slug":"JavaScript核心(2)-執行環境與執行堆疊","date":"2021-10-08T07:27:36.000Z","updated":"2021-10-08T07:41:37.290Z","comments":true,"path":"api/articles/JavaScript核心(2)-執行環境與執行堆疊.json","keywords":"前端,技術,網頁開發,前端開發,網頁,JavaScript,CSS,HTML,Vue,Vue.js,前端筆記","cover":"https://i.postimg.cc/tC28h7Zc/javascript.png","text":"執行環境(Execution environment) 如果沒執行函式，函式裡的變數不會產生，並且需要執行函式才會產生執行屬於它的執行環境。 全域環境會在瀏覽器開啟或是 node.js 後端啟動時建立，並且是瀏覽器就會產生 window 全域變數，如果是 node.js 就會產生...","link":"","photos":[],"count_time":{"symbolsCount":585,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"JavaScript","slug":"JavaScript","count":10,"path":"api/tags/JavaScript.json"}],"author":{"name":"tommm2","slug":"blog-author","avatar":"https://i.postimg.cc/nzsgrNDd/new.jpg","link":"/","description":"紀錄學習筆記以及自己成長的過程","socials":{"github":"https://github.com/tommm2","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"cakeresume":{"icon":"fab fa-cuttlefish","link":"https://www.cakeresume.com/real-pro"}}}}}}