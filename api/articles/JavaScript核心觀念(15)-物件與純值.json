{"title":"JavaScript核心觀念 (15)- 物件與純值","uid":"2296c2316579b79c6d630a59768df5d0","slug":"JavaScript核心觀念(15)-物件與純值","date":"2021-10-11T07:37:24.000Z","updated":"2021-10-11T07:57:37.129Z","comments":true,"path":"api/articles/JavaScript核心觀念(15)-物件與純值.json","keywords":"前端,技術,網頁開發,前端開發,網頁,JavaScript,CSS,HTML,Vue,Vue.js,前端筆記","cover":"https://i.postimg.cc/tC28h7Zc/javascript.png","content":"<p>在上篇提及了物件可用點記號或中括號來新增值一樣可新增屬性，那我們來看看以下範例：</p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\">var newString &#x3D; &#39;Hello World&#39;\nnewString.name &#x3D; &#39;new Hello&#39;\nconsole.log(newString.name)　&#x2F;&#x2F; undefined</code></pre>\n\n<p>可以看到 <code>newString.name</code> 出來的結果會是 <code>undefined</code>，原因是 <code>newString</code> 這個變數是一個 <code>純值</code>，無法像物件一樣可以新增屬性。</p>\n<p>嘗試用 <code>new String()</code> 包裹物件來看看結果：</p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\">var newString2 &#x3D; new String(&#39;Hello World&#39;)\nnewString2.name &#x3D; &#39;new Hello&#39;\n\nconsole.log(newString2) &#x2F;&#x2F; String &#123;&#39;Hello World&#39;, name: &#39;new Hello&#39;&#125;</code></pre>\n\n<p>可以看到 <code>name</code> 被賦予進去了，代表 <code>newString2</code> 是一個物件。</p>\n<p>來試試看用陣列能不能增加屬性：</p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\">var newArr &#x3D; [1, 2, 3]\nnewArr.name &#x3D; &#39;Hello arr&#39;\nconsole.log(newArr) \n\ntypeof newArr  &#x2F;&#x2F; 回傳 Object</code></pre>\n\n<p>可以看到陣列也可添加屬性，代表陣列也是一個 <code>物件型別</code>，如果不信可以使用 <code>typeof</code> 做查詢。</p>\n<p>接下來用函式來做個範例：</p>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\">function HelloWorld() &#123;\n\tconsole.log(&#39;Hello World&#39;)\n&#125;\n\nconsole.log(typeof HelloWorld) &#x2F;&#x2F; 回傳 function\n\nconsole.dir(HelloWorld)</code></pre>\n\n<p>你可能會很納悶明明 JavaScript 只有純值還有物件 ，為甚麼會跑出 <code>function</code> 呢? 需要注意的是 <code>function</code> 是一個物件型別下的子型別，可以透過 <code>console.dir()</code> 看到 <code>HelloWorld</code> 裡包了許多屬性。</p>\n<p><img src=\"https://i.postimg.cc/CLMxzDxd/image.jpg\" alt=\"function 是物件的子型別\"></p>\n<p>嘗試將一個屬性加入 <code>HelloWorld</code> 會發現成功被加入了。</p>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">WARNING</p>\n<p>要注意 <code>HelloWorld</code> 裡的 <code>name</code> 屬性無法被修改，因為 <code>name</code> 是函式本身的名字。</p>\n</div>\n<pre class=\"line-numbers language-jsx\" data-language=\"jsx\"><code class=\"language-jsx\">function HelloWorld() &#123;\n\tconsole.log(&#39;Hello World&#39;)\n&#125;\n\nHelloWorld.world &#x3D; &#39;Hello World&#39;\n\n&#x2F;&#x2F; 如果是賦予 name 屬性新值，name 也不會改變\nHelloWorld.name &#x3D; &#39;one_two&#39;\nconsole.dir(HelloWorld)</code></pre>\n\n<p><img src=\"https://i.postimg.cc/Nf2P8CMn/image.jpg\" alt=\"function 的 name 屬性無法修改\"></p>\n","feature":true,"text":"在上篇提及了物件可用點記號或中括號來新增值一樣可新增屬性，那我們來看看以下範例： var newString &#x3D; &#39;Hello World&#39; newString.name &#x3D; &#39;new Hello&#39; console.log(ne...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"JavaScript核心","slug":"JavaScript核心","count":15,"path":"api/categories/JavaScript核心.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":15,"path":"api/tags/JavaScript.json"}],"toc":"","author":{"name":"tommm2","slug":"blog-author","avatar":"https://i.postimg.cc/nzsgrNDd/new.jpg","link":"/","description":"紀錄學習筆記以及自己成長的過程","socials":{"github":"https://github.com/tommm2","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"cakeresume":{"icon":"fab fa-cuttlefish","link":"https://www.cakeresume.com/real-pro"}}}},"mapped":true,"prev_post":{},"next_post":{"title":"JavaScript核心(14)-物件取值、新增、刪除","uid":"3575803f69cb1026cdab940a86a96665","slug":"JavaScript核心(14)-物件取值、新增、刪除","date":"2021-10-11T07:21:03.000Z","updated":"2021-10-11T07:36:57.465Z","comments":true,"path":"api/articles/JavaScript核心(14)-物件取值、新增、刪除.json","keywords":"前端,技術,網頁開發,前端開發,網頁,JavaScript,CSS,HTML,Vue,Vue.js,前端筆記","cover":"https://i.postimg.cc/tC28h7Zc/javascript.png","text":"物件新增及取值物件取值的方式有兩種，有 點記法(Dot notation) 以及 中括號記法： 點記法點記法很直觀的，就是運用 . 在物件裡新增屬性： var family = &#123;&#125; family.dog = 'doggy' console.log(famil...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"JavaScript核心","slug":"JavaScript核心","count":15,"path":"api/categories/JavaScript核心.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":15,"path":"api/tags/JavaScript.json"}],"author":{"name":"tommm2","slug":"blog-author","avatar":"https://i.postimg.cc/nzsgrNDd/new.jpg","link":"/","description":"紀錄學習筆記以及自己成長的過程","socials":{"github":"https://github.com/tommm2","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"cakeresume":{"icon":"fab fa-cuttlefish","link":"https://www.cakeresume.com/real-pro"}}}},"feature":true}}